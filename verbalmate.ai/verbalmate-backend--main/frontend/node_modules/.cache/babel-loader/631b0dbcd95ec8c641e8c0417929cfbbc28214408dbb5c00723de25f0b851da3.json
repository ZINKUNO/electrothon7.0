{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arpit\\\\OneDrive\\\\Desktop\\\\new verbalmate ai\\\\verbalmate.ai\\\\verbalmate-backend--main\\\\frontend\\\\src\\\\context\\\\AccessContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccessContext = /*#__PURE__*/createContext();\nexport const AccessProvider = ({\n  children\n}) => {\n  _s();\n  const [accessGranted, setAccessGranted] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AccessContext.Provider, {\n    value: {\n      accessGranted,\n      setAccessGranted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AccessContext\n_s(AccessProvider, \"Lbd7Vn7OlBeoQhOQr/dh2Hx26VM=\");\n_c = AccessProvider;\nexport const useAccess = () => {\n  _s2();\n  return useContext(AccessContext);\n};\n_s2(useAccess, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AccessProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AccessContext","AccessProvider","children","_s","accessGranted","setAccessGranted","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAccess","_s2","$RefreshReg$"],"sources":["C:/Users/Arpit/OneDrive/Desktop/new verbalmate ai/verbalmate.ai/verbalmate-backend--main/frontend/src/context/AccessContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const AccessContext = createContext();\r\n\r\nexport const AccessProvider = ({ children }) => {\r\n  const [accessGranted, setAccessGranted] = useState(false);\r\n\r\n  return (\r\n    <AccessContext.Provider value={{ accessGranted, setAccessGranted }}>\r\n      {children}\r\n    </AccessContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AccessContext\r\nexport const useAccess = () => useContext(AccessContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACEE,OAAA,CAACC,aAAa,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,aAAa;MAAEC;IAAiB,CAAE;IAAAH,QAAA,EAChEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAAR,EAAA,CAVaF,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAW3B,OAAO,MAAMY,SAAS,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlB,UAAU,CAACI,aAAa,CAAC;AAAA;AAACc,GAAA,CAA5CD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}